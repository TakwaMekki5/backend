"""
Django settings for cft project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

# Importing necessary modules
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yw@g2t377a9z=jzsfbm(o_=$%k+pn3y)cwx3o@cbbbj(#li^dq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # Django admin site
    'django.contrib.auth',  # Authentication system
    'django.contrib.contenttypes',  # Content types framework
    'django.contrib.sessions',  # Session management
    'django.contrib.messages',  # Message framework
    'django.contrib.staticfiles',  # Serving static files
     'rest_framework',  # Django Rest Framework
     'authentification',  # Custom authentication app
]

# Middleware configuration
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Security middleware
    'django.contrib.sessions.middleware.SessionMiddleware',  # Session middleware
    'django.middleware.common.CommonMiddleware',  # Common middleware
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF protection middleware
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Authentication middleware
    'django.contrib.messages.middleware.MessageMiddleware',  # Message middleware
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection middleware
]

# Root URL configuration
ROOT_URLCONF = 'backend.urls'

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application configuration
WSGI_APPLICATION = 'backend.wsgi.application'

# Database configuration
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # PostgreSQL database engine
        'NAME': 'postgres',  # Database name
        'USER': 'postgres',  # Database user
        'PASSWORD': 'SopraHR2024++',  # Database password
        'HOST': 'localhost',  # Database host
        'PORT': '5432',  # Database port
    }
}

# Password validation configuration
# Liste des validateurs de mots de passe pour l'authentification des utilisateurs
# Voir la documentation : https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },  # Vérifie la similarité entre le mot de passe et les attributs de l'utilisateur
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },  # Vérifie la longueur minimale du mot de passe
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },  # Vérifie si le mot de passe est commun ou trop utilisé
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },  # Vérifie si le mot de passe contient des chiffres
]

# Configuration de l'internationalisation
# Code de langue par défaut
LANGUAGE_CODE = 'en-us'
# Fuseau horaire par défaut
TIME_ZONE = 'UTC'
# Activation de la prise en charge de l'internationalisation
USE_I18N = True
# Activation de la prise en charge des fuseaux horaires
USE_TZ = True

# Configuration des fichiers statiques
# URL de base pour les fichiers statiques
STATIC_URL = '/static/'

# Type de champ clé primaire par défaut
# Utilisation d'un champ auto-incrémenté de grande taille pour la clé primaire
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
